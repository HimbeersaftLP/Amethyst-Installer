using Newtonsoft.Json;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Resources;
using System.Text;
using System.Text.RegularExpressions;

namespace AutoGenerateLoc {
    internal class Program {
        private static void Main(string[] args) {

            string loc = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            loc = Path.GetFullPath(Path.Combine(loc, "../../../.."));

            var localeFile = File.ReadAllText(Path.Combine(loc, "Amethyst-Installer", "Util", "Localisation", "Localisation.cs"));
            var localeJson = File.ReadAllText(Path.Combine(loc, "Amethyst-Installer", "Resources", "Lang", "en.json"));

            Dictionary<string, string> localeDict =
                JsonConvert.DeserializeObject<Dictionary<string, string>>(localeJson);

            StringBuilder autoGeneratedBuffer = new StringBuilder();
            localeDict?.Keys.ToList().ForEach(x => autoGeneratedBuffer.AppendLine(
                $"\r\n\t\tpublic string {x} => \r\n\t\t\tLocaleManager.GetString(\"{x}\");"));
            
            File.WriteAllText(Path.Combine(loc, "Amethyst-Installer", "Util", "Localisation", "Localisation.cs"),
                localeFile.Replace(Regex.Matches(localeFile, 
                    "(?<=GEN_LOCALE_BEGIN_GETTERS\r\n)((.|\n)*)(?=GEN_LOCALE_END_GETTERS)")[0].ToString(), 
                    autoGeneratedBuffer + "\r\n\t\t// ")); // Replace everything between our funky property markers
        }
    }
}